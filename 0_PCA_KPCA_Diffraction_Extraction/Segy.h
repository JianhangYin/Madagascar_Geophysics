#include <cmath>

unsigned char EBC_ASC(unsigned char C){
	unsigned char T[256]={0x00,0x01,0x02,0x03,0x9C,0x09,0x86,0x7F,0x97,0x8D,0x8E,0x0B,0x0C,0x0D,0x0E,0x0F,0x10,0x11,0x12,0x13,0x9D,0x85,0x08,0x87,0x18,0x19,0x92,0x8F,0x1C,0x1D,0x1E,0x1F,0x80,0x81,0x82,0x83,0x84,0x0A,0x17,0x1B,0x88,0x89,0x8A,0x8B,0x8C,0x05,0x06,0x07,0x90,0x91,0x16,0x93,0x94,0x95,0x96,0x04,0x98,0x99,0x9A,0x9B,0x14,0x15,0x9E,0x1A,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA2,0x2E,0x3C,0x28,0x2B,0x7C,0x26,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x21,0x24,0x2A,0x29,0x3B,0xAC,0x2D,0x2F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA6,0x2C,0x25,0x5F,0x3E,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x3A,0x23,0x40,0x27,0x3D,0x22,0x00,0x61,0x62,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6A,0x6B,0x6C,0x6D,0x6E,0x6F,0x70,0x71,0x72,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7E,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7A,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7B,0x41,0x42,0x43,0x44,0x45,0x46,0x47,0x48,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0x7D,0x4A,0x4B,0x4C,0x4D,0x4E,0x4F,0x50,0x51,0x52,0x00,0x00,0x00,0x00,0x00,0x00,0x5C,0x00,0x53,0x54,0x55,0x56,0x57,0x58,0x59,0x5A,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x00,0x00,0x00,0x00,0x00,0x9F};
	return T[C];
}

unsigned char ASC_EBC(unsigned char C){
	unsigned char T[128]={0x00,0x01,0x02,0x03,0x37,0x2D,0x2E,0x2F,0x16,0x05,0x25,0x0B,0x0C,0x0D,0x0E,0x0F,0x10,0x11,0x12,0x13,0x3C,0x3D,0x32,0x26,0x18,0x19,0x3F,0x27,0x1C,0x1D,0x1E,0x1F,0x40,0x5A,0x7F,0x7B,0x5B,0x6C,0x50,0x7D,0x4D,0x5D,0x5C,0x4E,0x6B,0x60,0x4B,0x61,0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0x7A,0x5E,0x4C,0x7E,0x6E,0x6F,0x7C,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0x00,0xE0,0x00,0x00,0x6D,0x79,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xC0,0x4F,0xD0,0xA1,0x07};
	return T[C];
}

long Bin_Int_2Bt_BE(const unsigned char *const C){
	long S,I;
	S=C[0]>>7;
	I=(1-2*S)*(((C[0]&0x7F)<<8)+C[1]);
	return I;
}

long Bin_Int_4Bt_BE(const unsigned char *const C){
	long S,I;
	S=C[0]>>7;
	I=(1-2*S)*(((C[0]&0x7F)<<8)+(C[1]<<16)+(C[2]<<8)+C[3]);
	return I;
}

void Int_Bin_2Bt_BE(unsigned char *const C,long I){
	long S;
	S=I<0?1:0;
	I=fabs(I);
	C[0]=(S<<7)+((I&0x7F00)>>8);
	C[1]=I&0xFF;
}

void Int_Bin_4Bt_BE(unsigned char *const C,long I){
	long S;
	S=I<0?1:0;
	I=fabs(I);
	C[0]=(S<<7)+((I&0x7F000000)>>24);
	C[1]=(I&0xFF0000)>>16;
	C[2]=(I&0xFF00)>>8;
	C[3]=I&0xFF;
}

void Bin_Flt_IBM_BE(const unsigned char *C,float *const F,long N){
	unsigned char B1,B2,B3,B4;
	float S,E,M,D=pow(2,24);
	for(long i=0;i<N;i++){
		B1=*C++;
		B2=*C++;
		B3=*C++;
		B4=*C++;
		S=B1>>7;
		E=B1&0x7F;
		M=(B2<<16)+(B3<<8)+B4;
		F[i]=(E==0)&&(M==0)?0:(1-2*S)*(M/D)*pow(16,E-64);
	}
}

void Bin_Flt_IEE_BE(const unsigned char *C,float *const F,long N){
	unsigned char B1,B2,B3,B4;
	float S,E,M,D=pow(2,23);
	for(long i=0;i<N;i++){
		B1=*C++;
		B2=*C++;
		B3=*C++;
		B4=*C++;
		S=B1>>7;
		E=((B1&0x7F)<<1)+((B2&0x80)>>7);
		M=((B2&0x7F)<<16)+(B3<<8)+B4;
		F[i]=(E==0)&&(M==0)?0:(1-2*S)*(1+M/D)*pow(2,E-127);
	}
}

void Flt_Bin_IBM_BE(const float *const F,unsigned char *const C,long N){
	long S,E,M;
	float A,T;
	for(long i=0;i<N;i++){
		A=F[i];
		S=A<0?1:0;
		A=A*(1-2*S);
		T=A;
		E=0;
		if(A>0){
			if(A>=1.){
				E++;
				while(T/16.0f>=1.0f){
					E++;
					T=T/16.0f;
				}
			}else{
				while(T*16.0f<1.0f){
					E--;
					T=T*16.0f;
				}
			}
			E=E+64;
			M=A*pow(16,-E+70);
			C[i*4]=(S<<7)+(E&0x7F);
			C[i*4+1]=(M&0xFF0000)>>16;
			C[i*4+2]=(M&0xFF00)>>8;
			C[i*4+3]=M&0xFF;
		}else{
			C[i*4]=0;
			C[i*4+1]=0;
			C[i*4+2]=0;
			C[i*4+3]=0;
		}
	}
}

void Flt_Bin_IEE_BE(const float *const F,unsigned char *const C,long N){
	long S,E,M;
	float A,T,D=pow(2,23);
	for(long i=0;i<N;i++){
		A=F[i];
		S=A<0?1:0;
		A=A*(1-2*S);
		T=A;
		E=0;
		if(A>0){
			if(A>=1.){
				while(T/2.0f>=1.0f){
					E++;
					T=T/2.0f;
				}
			}else{
				E--;
				while(T*2.0f<1.0f){
					E--;
					T=T*2.0f;
				}
			}
			E=E+127;
			M=((A/pow(2,E-127))-1)*D;
			C[i*4]=(S<<7)+((E&0xFE)>>1);
			C[i*4+1]=((E&0x01)<<7)+((M&0x7F0000)>>16);
			C[i*4+2]=(M&0xFF00)>>8;
			C[i*4+3]=M&0xFF;
		}else{
			C[i*4]=0;
			C[i*4+1]=0;
			C[i*4+2]=0;
			C[i*4+3]=0;
		}
	}
}

void Bin_Rvs_Ed_2Bt(unsigned char *const C,long N){
	unsigned char B;
	for(long i=0;i<N;i++){
		B=C[i*2];
		C[i*2]=C[i*2+1];
		C[i*2+1]=B;
	}
}

void Bin_Rvs_Ed_4Bt(unsigned char *const C,long N){
	unsigned char B;
	for(long i=0;i<N;i++){
		B=C[i*4];
		C[i*4]=C[i*4+3];
		C[i*4+3]=B;
		B=C[i*4+1];
		C[i*4+1]=C[i*4+2];
		C[i*4+2]=B;
	}
}

void Bin_Rvs_Ed_FHd(unsigned char *const C){
	Bin_Rvs_Ed_4Bt(C+3200,3);
	Bin_Rvs_Ed_2Bt(C+3212,24);
	Bin_Rvs_Ed_2Bt(C+3500,3);
}

void Bin_Rvs_Ed_THd(unsigned char *const C){
	Bin_Rvs_Ed_4Bt(C,7);
	Bin_Rvs_Ed_2Bt(C+28,4);
	Bin_Rvs_Ed_4Bt(C+36,8);
	Bin_Rvs_Ed_2Bt(C+68,2);
	Bin_Rvs_Ed_4Bt(C+72,4);
	Bin_Rvs_Ed_2Bt(C+88,46);
	Bin_Rvs_Ed_4Bt(C+180,5);
	Bin_Rvs_Ed_2Bt(C+200,2);
	Bin_Rvs_Ed_4Bt(C+204,1);
	Bin_Rvs_Ed_2Bt(C+208,5);
	Bin_Rvs_Ed_4Bt(C+224,1);
	Bin_Rvs_Ed_2Bt(C+228,2);
}
